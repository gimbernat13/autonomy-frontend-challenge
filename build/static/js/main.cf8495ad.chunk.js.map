{"version":3,"sources":["components/LightBulb/LightBulb.tsx","components/Moon/Moon.tsx","config/theme.js","components/Button/Button.tsx","components/Card/Card.tsx","components/Input/Input.tsx","utils/styleVariables.js","components/DateTimePicker/DateTime.tsx","components/InputPanel/InputPanel.tsx","components/TextInputPanel/TextInputPanel.tsx","components/TxForm/TxForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LightBulb","clicked","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","opacity","cx","cy","r","x1","y1","x2","y2","Moon","d","lightTheme","body","text","toggleBorder","background","cardBg","inputBg","buttonBg","colorScheme","border","borderHover","darkTheme","StyledButton","styled","button","theme","Button","children","label","disabled","type","className","StyledCard","div","StyledCardInner","Card","StyledInputContainer","StyledInput","input","Input","placeholder","onChange","value","id","step","StyledPicker","Container","DateTimePicker","name","today","Date","toISOString","min","max","StyledInputPanel","StyledTopPanel","StyledBottomPanel","StyledBottomPanelText","StyledMaxButton","InputPanel","balance","handleMaxInput","as","TextInputPanel","MyForm","isConnected","isConnecting","onLoginHandler","message","ethSenderContract","registryContract","selectedAccount","web3","initialValues","amount","address","dateAndTime","onSubmit","values","actions","amountToWei","utils","toWei","toString","newReqObject1","target","referer","callData","methods","sendEthAtTime","getTime","encodeABI","ethForCall","verifyUser","insertFeeAmount","payWithAUTO","isAlive","callReg","newReq","send","from","response","setFieldValue","provider","window","ethereum","Web3","ETHSENDER_ABI","require","REGISTRY_ABI","eth","Contract","StyledNav","StyledLogo","StyledRightSidePanel","StyledSelector","App","React","useState","isDarkTheme","setIsDarkTheme","setIsConnected","currentAccount","setCurrentAccount","setBalance","setIsConnecting","currentChain","networkVersion","detectProvider","onLogin","currentProvider","alert","useEffect","console","error","request","method","getAccounts","accounts","length","log","getBalance","accBalanceEth","fromWei","Number","toFixed","themeSwitcher","src","alt","style","color","checkConnectedNetwork","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"05dAMaA,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAC1B,OACE,sBACEC,QAASD,EACTE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,QAAQ,MAXV,UAaE,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAChC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,SACvC,sBAAMH,GAAG,QAAQC,GAAG,QAAQC,GAAG,QAAQC,GAAG,UAC1C,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAC/B,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,OAAOC,GAAG,QAAQC,GAAG,OAAOC,GAAG,UACxC,sBAAMH,GAAG,QAAQC,GAAG,OAAOC,GAAG,QAAQC,GAAG,aCvBlCC,EAAO,SAAC,GAAwB,IAAtBnB,EAAqB,EAArBA,QACrB,OACE,qBACEC,QAASD,EACTE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBI,QAAQ,MAXV,SAaE,sBAAMS,EAAE,uD,kBCrBDC,EAAa,CACxBC,KAAM,OACNC,KAAM,qBACNC,aAAc,OACdC,WAAY,UACZC,OAAQ,QACRC,QAAS,qBACTC,SAAU,sBACVC,YAAa,QACbC,OAAQ,wBACRC,YAAa,gCAEFC,EAAY,CACvBV,KAAM,UACNC,KAAM,qBACNC,aAAc,UACdC,WAAY,OACZE,QAAS,oBACTD,OAAQ,kBACRE,SAAU,0BACVC,YAAa,OACbC,OAAQ,wBACRC,YAAa,8B,QCbTE,G,OAAeC,IAAOC,OAAV,i4BAuBF,qBAAGC,MAAkBR,aAgBxBS,EAAS,SAAC,GAAmD,IAAjDpC,EAAgD,EAAhDA,QAAgBqC,GAAgC,EAAvCC,MAAuC,EAAhCD,UAAgC,EAAtBE,SACjD,OACE,cAACP,EAAD,CACEO,UAAU,EACVC,KAAK,SACLxC,QAASA,EACTyC,UAAU,SAJZ,SAMGJ,KClDDK,EAAaT,IAAOU,IAAV,mZAKA,qBAAGR,MAAkBV,UAC1B,qBAAGU,MAAkBb,QAS1BsB,EAAkBX,IAAOU,IAAV,yGAORE,EAAO,SAAC,GAAyB,IAAvBR,EAAsB,EAAtBA,SACrB,OACE,cAACK,EAAD,UACE,cAACE,EAAD,UAAkBP,OChBlBS,G,OAAuBb,IAAOU,IAAV,2JCdV,SDuBVI,EAAcd,IAAOe,MAAV,gTAaN,qBAAGb,MAAkBb,QAGnB2B,EAAQ,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,YAAaV,EAAuC,EAAvCA,KAAMW,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,GAC1D,OACE,cAACP,EAAD,UACE,qBAAKL,UAAU,uBAAf,SACE,cAACM,EAAD,CACEM,GAAIA,EACJF,SAAUA,EACVG,KAAK,OACLJ,YAAaA,EACbV,KAAMA,EACNY,MAAOA,GAAgB,GACvBX,UAAU,sBE1Cdc,EAAetB,IAAOe,MAAV,khBAMA,qBAAGb,MAAkBP,eAoBjC4B,EAAYvB,IAAOU,IAAV,wFAMFc,EAAiB,SAAC,GAA0C,IAAxCN,EAAuC,EAAvCA,SAAUE,EAA6B,EAA7BA,GAAWK,GAAkB,EAAzBN,MAAyB,EAAlBM,MAC9CC,GAAQ,IAAIC,MAAOC,cAEzB,OACE,cAACL,EAAD,UACE,cAACD,EAAD,CACEf,KAAK,iBACLa,GAAIA,EACJF,SAAUA,EACVO,KAAMA,EACNI,IAAKH,EACLI,IAAI,wBC1CNC,EAAmB/B,IAAOU,IAAV,iKAEN,qBAAGR,MAAkBT,WAEzB,qBAAGS,MAAkBN,UAGnB,qBAAGM,MAAkBL,eAG7BmC,EAAiBhC,IAAOU,IAAV,yGAKduB,EAAoBjC,IAAOU,IAAV,8EAKjBwB,EAAwBlC,IAAOU,IAAV,gLASrByB,EAAkBnC,IAAOU,IAAV,sSAcR0B,EAAa,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,QAASlB,EAAmC,EAAnCA,MAAOmB,EAA4B,EAA5BA,eAC3C,OACE,eAACP,EAAD,WACE,eAACC,EAAD,WACE,cAAC,IAAD,CACEP,KAAK,SACLc,GAAIvB,EACJC,YAAY,SACZV,KAAK,SACLa,GAAG,SACHD,MAAOA,IAET,yCAEF,cAACc,EAAD,UACE,eAACC,EAAD,wBACaG,EACX,cAACF,EAAD,CAAiBpE,QAASuE,EAA1B,0BChEJP,GAAmB/B,IAAOU,IAAV,uMAGV,qBAAGR,MAAkBN,UACjB,qBAAGM,MAAkBT,WAIvB,qBAAGS,MAAkBL,eAItB2C,GAAiB,SAAC,GAAyB,IAAvBpC,EAAsB,EAAtBA,SAC/B,OAAO,cAAC,GAAD,UAAmBA,KCVfqC,GAUR,SAAC,GAUC,IATLC,EASI,EATJA,YACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,QACAC,EAKI,EALJA,kBACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,gBACAX,EAEI,EAFJA,QACAY,EACI,EADJA,KAQA,OACE,8BACE,cAAC,IAAD,CACEC,cAAe,CACbC,OAAQ,EACRC,QAAS,GACTC,YAAa,IAEfC,SAAU,SAACC,EAAaC,GACtB,IAfazC,EAeLsC,EAAiCE,EAAjCF,YAAaD,EAAoBG,EAApBH,QAASD,EAAWI,EAAXJ,OACxBM,EAAcR,EAAKS,MAAMC,MAAMR,EAAOS,WAAY,SAClDC,EAAgB,CACpBC,OAde,6CAefC,QAAS,6CACTC,SAAUlB,EAAkBmB,QACzBC,eArBQnD,EAqBkBsC,EApBrB,IAAI1B,KAAKZ,GAAOoD,WAoBmBf,EAAQQ,YAChDQ,YACHC,WAAYZ,EACZa,YAAY,EACZC,iBAAiB,EACjBC,aAAa,EACbC,SAAS,GAITX,EAOED,EAPFC,OACAC,EAMEF,EANFE,QACAC,EAKEH,EALFG,SACAK,EAIER,EAJFQ,WACAC,EAGET,EAHFS,WACAC,EAEEV,EAFFU,gBACAE,EACEZ,EADFY,QAGIC,EAAO,iDAAG,8GACS3B,EAAiBkB,QACrCU,OACCb,EACAC,EACAC,EACAK,EACAC,EACAC,EACAE,GAEDG,KAAK,CACJC,KAAM7B,EACN7B,MAAOsC,IAbG,cACRqB,EADQ,yBAePA,GAfO,2CAAH,qDAkBbJ,KAlDJ,SAqDG,YAA+C,IAA5CK,EAA2C,EAA3CA,cAAexB,EAA4B,EAA5BA,OAA4B,EAApBL,cAKzB,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,qCACE,qBAAK1C,UAAU,QAAf,SACE,8BAAMqC,MAER,cAAC,EAAD,CACEP,eAZa,WACrByC,EAAc,SAAU1C,IAYhBA,QAASA,EACTlB,MAAOoC,EAAOJ,SAEhB,cAAC,GAAD,UACE,cAAC,IAAD,CACE1B,KAAK,UACLc,GAAIvB,EACJC,YAAY,UACZG,GAAG,cAGP,cAAC,GAAD,UACE,cAAC,IAAD,CACEK,KAAK,cACLc,GAAIf,EACJP,YAAY,cACZG,GAAG,kBAmBNsB,EACC,cAAC,EAAD,iCAEA,cAAC,EAAD,CAAQ3E,QAAS6E,EAAjB,SACE,sCACID,IAAiBD,GAAe,iBACjCC,IAAiBD,GAAe,+BCvIrDsC,GAAWC,OAAOC,SAChBjC,GAAO,IAAIkC,IAAKH,IAIhBI,GAAgBC,EAAQ,KACxBC,GAAeD,EAAQ,KAEvBvC,GAAoB,IAAIG,GAAKsC,IAAIC,SACrCJ,GANuB,8CAUnBrC,GAAmB,IAAIE,GAAKsC,IAAIC,SAASF,GATvB,8CAWlBG,GAAYzF,YAAO,MAAPA,CAAH,yIAOT0F,GAAa1F,YAAO,MAAPA,CAAH,6CAGV2F,GAAuB3F,YAAO,MAAPA,CAAH,sEAIpB4F,GAAiB5F,YAAO,MAAPA,CAAH,2aAGJ,qBAAGE,MAAkBV,UACzB,qBAAGU,MAAkBN,UAEtB,qBAAGM,MAAkBb,QAwIjBwG,OA1Hf,WACE,MAAsCC,IAAMC,UAAS,GAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOrD,EAAP,KAAoBwD,EAApB,KACA,EAA4CH,mBAAc,MAA1D,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA8BL,mBAAc,GAA5C,mBAAO1D,EAAP,KAAgBgE,EAAhB,KAEA,EAAwCN,oBAAS,GAAjD,mBAAOpD,EAAP,KAAqB2D,EAArB,KACMC,EAAetB,OAAOC,SAASsB,eAE/BC,EAAiB,WACrB,IAAIzB,EASJ,OARIC,OAAOC,UACTF,EAAWC,OAAOC,SAClBwB,EAAQ1B,IACCC,OAAOhC,KAChB+B,EAAWC,OAAOhC,KAAK0D,gBAEvB1B,OAAO2B,MAAM,oDAER5B,GAGT6B,qBAAU,WACRJ,OAGF,IAaM7D,EAAc,iDAAG,mGACfoC,EAAWyB,KADI,uBAGfzB,IAAaC,OAAOC,UACtB4B,QAAQC,MACN,yEAGJT,GAAgB,GARG,SASbtB,EAASgC,QAAQ,CACrBC,OAAQ,wBAVS,OAanBX,GAAgB,GAbG,OAerBI,EAAQ1B,GAfa,2CAAH,qDAkBd0B,EAAO,iDAAG,WAAO1B,GAAP,4FACR/B,EAAO,IAAIkC,IAAKH,GADR,SAES/B,EAAKsC,IAAI2B,cAFlB,UAGU,KADlBC,EAFQ,QAGDC,OAHC,gBAIZN,QAAQO,IAAI,+BAJA,0BAKHF,EAAS,KAAOhB,EALb,wBAMZC,EAAkBe,EAAS,IANf,KAOUlE,EAAKS,MAPf,UAQJT,EAAKsC,IAAI+B,WAAWH,EAAS,IARzB,oBAONI,EAPM,KAOqBC,QAPrB,eASV,SAGFnB,EAAWoB,OAAOF,GAAeG,QAAQ,IACzCxB,GAAe,GAbH,4CAAH,sDAiBPyB,EAAgB3B,EACpB,8BACE,cAAC,EAAD,CAAMlI,QAAS,kBAAMmI,GAAgBD,QAGvC,cAAC,EAAD,CAAWlI,QAAS,kBAAMmI,GAAgBD,MAG5C,OACE,cAAC,IAAD,CAAe9F,MAAO8F,EAAc7G,EAAaW,EAAjD,SACE,sBAAKU,UAAWwF,EAAc,cAAgB,aAA9C,UACE,eAACP,GAAD,WACE,cAACC,GAAD,CACEkC,IAAI,yHACJC,IAAI,KAEN,oBAAIC,MAAO,CAAEC,MAAO,kBAApB,SA1DsB,WAC5B,GAA6B,IAAzBN,OAAOlB,GACT,MAAM,qFAwDuCyB,KAEzC,eAACrC,GAAD,WACE,eAACC,GAAD,eAAkBvD,EAAlB,UACA,eAACuD,GAAD,eApEkC,CAC1C,EAAG,WACH,EAAG,IACH,EAAG,mBAiEgCW,MAC3B,eAACX,GAAD,eAAkBO,KAClB,cAACP,GAAD,UAAiB+B,UAIK,IAAzBF,OAAOlB,GACN,cAAC,GAAD,CACEtD,KAAMA,GACNZ,QAASA,EACTW,gBAAiBmD,EACjBpD,iBAAkBA,GAClBD,kBAAmBA,GACnBJ,YAAaA,EACbC,aAAcA,EACdE,QAAQ,qBACRD,eAAgBA,IAGlB,cAAC,EAAD,UACE,qEChKGqF,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHDQ,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,OAOJd,O","file":"static/js/main.cf8495ad.chunk.js","sourcesContent":["import React from \"react\";\n\ntype Props = {\n  clicked: () => void;\n};\n\nexport const LightBulb = ({ clicked }: Props) => {\n  return (\n    <svg\n      onClick={clicked}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      opacity=\"0.6\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n      <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n      <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n      <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n      <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n      <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n      <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n      <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n      <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n    </svg>\n  );\n};\n","import React from \"react\";\n\ntype Props = {\n  clicked: () => void;\n};\n\nexport const Moon = ({ clicked }: Props) => {\n  return (\n    <svg\n      onClick={clicked}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      opacity=\"0.6\"\n    >\n      <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n    </svg>\n  );\n};\n","export const lightTheme = {\n  body: \"#FFF\",\n  text: \"#363537 !important\",\n  toggleBorder: \"#FFF\",\n  background: \"#363537\",\n  cardBg: \"white\",\n  inputBg: \"rgb(247, 248, 250)\",\n  buttonBg: \" rgb(205, 230, 254)\",\n  colorScheme: \"light\",\n  border: \"1px solid transparent\",\n  borderHover: \"1px solid rgb(206, 208, 217)\"\n};\nexport const darkTheme = {\n  body: \"#363537\",\n  text: \"#FAFAFA !important\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n  inputBg: \" rgb(33, 36, 41);\",\n  cardBg: \"rgb(25, 27, 31)\",\n  buttonBg: \"rgba(21, 61, 111, 0.44)\",\n  colorScheme: \"dark\",\n  border: \"1px solid transparent\",\n  borderHover: \"1px solid rgb(64, 68, 79);\"\n\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./index.scss\";\ntype Props = {\n  onClick?: () => void;\n  label?: \"string\";\n  children?: any;\n  disabled?: boolean;\n};\nconst StyledButton = styled.button`\n  padding: 16px;\n  width: 100%;\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 20px;\n  outline: none;\n  /* border: 1px solid rgb(237, 238, 242); */\n  border: none;\n  text-decoration: none;\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  flex-wrap: nowrap;\n  -webkit-box-align: center;\n  align-items: center;\n  cursor: pointer;\n  position: relative;\n  z-index: 1;\n  will-change: transform;\n  transition: transform 450ms ease 0s;\n  transform: perspective(1px) translateZ(0px);\n  background: ${({ theme }) => theme.buttonBg};\n  color: rgb(80, 144, 234);\n  &:disabled,\n  &[disabled] {\n    border: 1px solid #999999;\n    background-color: #cccccc;\n    color: #666666;\n    cursor: default;\n    filter: blur(1px);\n  }\n\n  /* background-color: rgb(205, 230, 254); */\n  &:hover {\n    filter: brightness(1.05);\n  }\n`;\nexport const Button = ({ onClick, label, children, disabled }: Props) => {\n  return (\n    <StyledButton\n      disabled={false}\n      type=\"submit\"\n      onClick={onClick}\n      className=\"button\"\n    >\n      {children}\n    </StyledButton>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  children: JSX.Element;\n};\nconst StyledCard = styled.div`\n  position: relative;\n  max-width: 480px;\n  width: 100%;\n  background: rgb(255, 255, 255);\n  background: ${({ theme }) => theme.cardBg};\n  color: ${({ theme }) => theme.text};\n  box-shadow: rgb(0 0 0 / 1%) 0px 0px 1px, rgb(0 0 0 / 4%) 0px 4px 8px,\n    rgb(0 0 0 / 4%) 0px 16px 24px, rgb(0 0 0 / 1%) 0px 24px 32px;\n  border-radius: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5rem;\n  z-index: 1;\n`;\nconst StyledCardInner = styled.div`\n  display: grid;\n  grid-template-rows: auto;\n  gap: 8px;\n  padding: 8px;\n`;\n\nexport const Card = ({ children }: Props) => {\n  return (\n    <StyledCard>\n      <StyledCardInner>{children}</StyledCardInner>\n    </StyledCard>\n  );\n};\n","import React from \"react\";\nimport \"./index.scss\";\nimport styled from \"styled-components\";\n// FIXME : USE HOOK TO HANDLE DARK MODE\n// import { useDarkMode } from \"../../utils/hooks/useDarkmode\";\nimport { GLOBAL_THEME } from \"../../utils/styleVariables\";\n\ntype Props = {\n  placeholder?: string;\n  type: string;\n  onChange?: () => void;\n  value: string | number;\n  id: string;\n};\n\nconst StyledInputContainer = styled.div`\n  border-radius: ${GLOBAL_THEME.borderRadius};\n  font-weight: \"bolder\";\n  &:hover {\n  }\n  &.focus {\n    border: 1px solid rgb(206, 208, 217);\n  }\n`;\nconst StyledInput = styled.input`\n  font-size: 28px;\n  border-radius: 20px;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: inherit;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  color: ${({ theme }) => theme.text};\n`;\n\nexport const Input = ({ placeholder, type, onChange, value, id }: Props) => {\n  return (\n    <StyledInputContainer>\n      <div className=\"input-flex-container\">\n        <StyledInput\n          id={id}\n          onChange={onChange}\n          step=\"0.01\"\n          placeholder={placeholder}\n          type={type}\n          value={value ? value : \"\"}\n          className=\"amount-input\"\n        />\n      </div>\n    </StyledInputContainer>\n  );\n};\n","export const GLOBAL_THEME = {\n  borderRadius: \"20px\",\n  border: \"1px solid rgb(44, 47, 54 , .5)\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\ninterface Props {\n  onChange: () => void;\n  id: string;\n  value: string;\n  name: string;\n}\n\nconst StyledPicker = styled.input`\n  border-radius: 20px;\n  width: 100%;\n  position: relative;\n  border: none;\n  font-size: 28px;\n  color-scheme: ${({ theme }) => theme.colorScheme};\n  font-size: 26px;\n  font-weight: 500;\n  background-color: inherit;\n\n  ::-webkit-datetime-edit {\n    /* padding: 4px; */\n  }\n  ::-webkit-inner-spin-button {\n    display: none;\n  }\n  ::-webkit-calendar-picker-indicator {\n    color: white;\n    fill: white;\n    stroke: white;\n    /* transform: scale(1.3); */\n    cursor: pointer;\n    /* margin-right: 18px; */\n  }\n`;\nconst Container = styled.div`\n  width: 100%;\n  /* padding: 20px; */\n  cursor: pointer;\n`;\n\nexport const DateTimePicker = ({ onChange, id, value, name }: Props) => {\n  const today = new Date().toISOString();\n\n  return (\n    <Container>\n      <StyledPicker\n        type=\"datetime-local\"\n        id={id}\n        onChange={onChange}\n        name={name}\n        min={today}\n        max=\"2024-06-14T00:00\"\n      />\n    </Container>\n  );\n};\n","import { Field } from \"formik\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Input } from \"../Input/Input\";\n\ntype Props = {\n  balance: any;\n  handleMaxInput: any;\n  value: any;\n};\nconst StyledInputPanel = styled.div`\n  border-radius: 20px;\n  background: ${({ theme }) => theme.inputBg};\n  width: initial;\n  border: ${({ theme }) => theme.border};\n  padding: 1rem;\n  &:hover {\n    border: ${({ theme }) => theme.borderHover};\n  }\n`;\nconst StyledTopPanel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst StyledBottomPanel = styled.div`\n  display: flex;\n\n  justify-content: flex-end;\n`;\nconst StyledBottomPanelText = styled.div`\n  margin: 0px;\n  min-width: 0px;\n  font-weight: 500;\n  font-size: 14px;\n  color: rgb(143, 150, 172);\n  display: flex;\n  align-items: center;\n`;\nconst StyledMaxButton = styled.div`\n  background-color: rgba(21, 61, 111, 0.44);\n  border: none;\n  border-radius: 12px;\n  color: rgb(33, 114, 229);\n  font-size: 11px;\n  font-weight: 500;\n  margin-left: 0.25rem;\n  opacity: 1;\n  padding: 4px 6px;\n  pointer-events: initial;\n  cursor: pointer;\n`;\n\nexport const InputPanel = ({ balance, value, handleMaxInput }: Props) => {\n  return (\n    <StyledInputPanel>\n      <StyledTopPanel>\n        <Field\n          name=\"amount\"\n          as={Input}\n          placeholder=\"Amount\"\n          type=\"number\"\n          id=\"amount\"\n          value={value}\n        />\n        <div>ETH</div>\n      </StyledTopPanel>\n      <StyledBottomPanel>\n        <StyledBottomPanelText>\n          Balance : {balance}\n          <StyledMaxButton onClick={handleMaxInput}>MAX</StyledMaxButton>\n        </StyledBottomPanelText>\n      </StyledBottomPanel>\n    </StyledInputPanel>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  children: any;\n};\nconst StyledInputPanel = styled.div`\n  border-radius: 20px;\n  border: 1px solid rgb(25, 27, 31);\n  border: ${({ theme }) => theme.border};\n  background: ${({ theme }) => theme.inputBg};\n  width: initial;\n  padding: 1rem;\n  &:hover {\n    border: ${({ theme }) => theme.borderHover};\n  }\n`;\n\nexport const TextInputPanel = ({ children }: Props) => {\n  return <StyledInputPanel>{children}</StyledInputPanel>;\n};\n","import * as React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button } from \"../Button/Button\";\nimport { Card } from \"../Card/Card\";\nimport { Input } from \"../Input/Input\";\nimport { DateTimePicker } from \"../DateTimePicker/DateTime\";\nimport { InputPanel } from \"../InputPanel/InputPanel\";\nimport { TextInputPanel } from \"../TextInputPanel/TextInputPanel\";\n\nexport const MyForm: React.FC<{\n  balance: any;\n  message: string;\n  isConnected: boolean;\n  isConnecting: boolean;\n  onLoginHandler: any;\n  ethSenderContract: any;\n  registryContract: any;\n  selectedAccount: any;\n  web3: any;\n}> = ({\n  isConnected,\n  isConnecting,\n  onLoginHandler,\n  message,\n  ethSenderContract,\n  registryContract,\n  selectedAccount,\n  balance,\n  web3,\n}) => {\n  const toTimestamp = (input: any) => {\n    var timestamp = new Date(input).getTime();\n    return timestamp;\n  };\n  const ethSenderAddress = \"0xfa0a8b60b2af537dec9832f72fd233e93e4c8463\";\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          amount: 0,\n          address: \"\",\n          dateAndTime: \"\",\n        }}\n        onSubmit={(values: any, actions: any) => {\n          const { dateAndTime, address, amount } = values;\n          const amountToWei = web3.utils.toWei(amount.toString(), \"ether\");\n          const newReqObject1 = {\n            target: ethSenderAddress,\n            referer: \"0x0000000000000000000000000000000000000000\",\n            callData: ethSenderContract.methods\n              .sendEthAtTime(toTimestamp(dateAndTime), address.toString())\n              .encodeABI(),\n            ethForCall: amountToWei,\n            verifyUser: false,\n            insertFeeAmount: false,\n            payWithAUTO: false,\n            isAlive: false,\n          };\n\n          const {\n            target,\n            referer,\n            callData,\n            ethForCall,\n            verifyUser,\n            insertFeeAmount,\n            isAlive,\n          } = newReqObject1;\n\n          const callReg = async () => {\n            const response = await registryContract.methods\n              .newReq(\n                target,\n                referer,\n                callData,\n                ethForCall,\n                verifyUser,\n                insertFeeAmount,\n                isAlive\n              )\n              .send({\n                from: selectedAccount,\n                value: amountToWei,\n              });\n            return response;\n          };\n\n          callReg();\n        }}\n      >\n        {({ setFieldValue, values, initialValues }) => {\n          const handleMaxInput = () => {\n            setFieldValue(\"amount\", balance);\n          };\n\n          return (\n            <Form>\n              <Card>\n                <>\n                  <div className=\"title\">\n                    <div>{message}</div>\n                  </div>\n                  <InputPanel\n                    handleMaxInput={handleMaxInput}\n                    balance={balance}\n                    value={values.amount}\n                  />\n                  <TextInputPanel>\n                    <Field\n                      name=\"address\"\n                      as={Input}\n                      placeholder=\"Address\"\n                      id=\"address\"\n                    />\n                  </TextInputPanel>\n                  <TextInputPanel>\n                    <Field\n                      name=\"dateAndTime\"\n                      as={DateTimePicker}\n                      placeholder=\"Select Date\"\n                      id=\"dateAndTime\"\n                    />\n                  </TextInputPanel>\n                  {/* <Field\n                 id=\"address\"\n                 name=\"address\"\n                 as={Input}\n                 type=\"text\"\n                 placeholder=\"Wallet Address\"\n               /> */}\n\n                  {/* <Field\n                 id=\"amount\"\n                 name=\"amount\"\n                 as={Input}\n                 type=\"number\"\n                 placeholder=\"Amount of ETH\"\n               /> */}\n\n                  {isConnected ? (\n                    <Button> Send Transaction </Button>\n                  ) : (\n                    <Button onClick={onLoginHandler}>\n                      <>\n                        {!isConnecting && !isConnected && \"Connect Wallet\"}\n                        {isConnecting && !isConnected && \"Loading...\"}\n                      </>\n                    </Button>\n                  )}\n                </>\n              </Card>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { LightBulb } from \"./components/LightBulb/LightBulb\";\nimport { Moon } from \"./components/Moon/Moon\";\nimport Web3 from \"web3\";\nimport { darkTheme, lightTheme } from \"./config/theme\";\nimport { MyForm } from \"./components/TxForm/TxForm\";\nimport { Card } from \"./components/Card/Card\";\n\ndeclare var window: any;\nlet provider = window.ethereum;\nconst web3 = new Web3(provider);\n\nconst ethSenderAddress = \"0xfa0a8b60b2af537dec9832f72fd233e93e4c8463\";\nconst registryAddress = \"0x3C901dc595105934D61DB70C2170D3a6834Cb8B7\";\nconst ETHSENDER_ABI = require(\"./config/ABI/ethSenderAbi.json\");\nconst REGISTRY_ABI = require(\"./config/ABI/registryAbi.json\");\n\nconst ethSenderContract = new web3.eth.Contract(\n  ETHSENDER_ABI,\n  ethSenderAddress\n);\n\nconst registryContract = new web3.eth.Contract(REGISTRY_ABI, registryAddress);\n\nconst StyledNav = styled(\"div\")`\n  width: 98%;\n  margin: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst StyledLogo = styled(\"img\")`\n  height: 40px;\n`;\nconst StyledRightSidePanel = styled(\"div\")`\n  display: flex;\n  align-items: center;\n`;\nconst StyledSelector = styled(\"div\")`\n  -webkit-box-align: center;\n  align-items: center;\n  background: ${({ theme }) => theme.cardBg};\n  border: ${({ theme }) => theme.border};\n  border-radius: 16px;\n  color: ${({ theme }) => theme.text};\n  cursor: pointer;\n  display: flex;\n  font-weight: 500;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  padding: 8px 12px;\n  /* max-width: 200px; */\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-right: 5px;\n`;\n\nfunction App() {\n  const [isDarkTheme, setIsDarkTheme] = React.useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentAccount, setCurrentAccount] = useState<any>(null);\n  const [balance, setBalance] = useState<any>(0);\n\n  const [isConnecting, setIsConnecting] = useState(false);\n  const currentChain = window.ethereum.networkVersion;\n\n  const detectProvider = () => {\n    let provider;\n    if (window.ethereum) {\n      provider = window.ethereum;\n      onLogin(provider);\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n      window.alert(\"No Ethereum browser detected! Check out MetaMask\");\n    }\n    return provider;\n  };\n\n  useEffect(() => {\n    detectProvider();\n  });\n\n  const chainIds: { [key: number]: string } = {\n    1: \"Ethereum\",\n    2: \"R\",\n    3: \"Ropsten Testnet\",\n  };\n\n  const checkConnectedNetwork = () => {\n    if (Number(currentChain) !== 3) {\n      return `⚠️ You are connected to an unsupported network, Please Switch to Ropsten`;\n    }\n    return;\n  };\n\n  const onLoginHandler = async () => {\n    const provider = detectProvider();\n    if (provider) {\n      if (provider !== window.ethereum) {\n        console.error(\n          \"Not window.ethereum provider. Do you have multiple wallet installed ?\"\n        );\n      }\n      setIsConnecting(true);\n      await provider.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      setIsConnecting(false);\n    }\n    onLogin(provider);\n  };\n\n  const onLogin = async (provider: any) => {\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    if (accounts.length === 0) {\n      console.log(\"Please connect to MetaMask!\");\n    } else if (accounts[0] !== currentAccount) {\n      setCurrentAccount(accounts[0]);\n      const accBalanceEth = web3.utils.fromWei(\n        await web3.eth.getBalance(accounts[0]),\n        \"ether\"\n      );\n\n      setBalance(Number(accBalanceEth).toFixed(6));\n      setIsConnected(true);\n    }\n  };\n\n  const themeSwitcher = isDarkTheme ? (\n    <div>\n      <Moon clicked={() => setIsDarkTheme(!isDarkTheme)} />\n    </div>\n  ) : (\n    <LightBulb clicked={() => setIsDarkTheme(!isDarkTheme)} />\n  );\n\n  return (\n    <ThemeProvider theme={isDarkTheme ? lightTheme : darkTheme}>\n      <div className={isDarkTheme ? \"light-theme\" : \"dark-theme\"}>\n        <StyledNav>\n          <StyledLogo\n            src=\"https://uploads-ssl.webflow.com/623d3c9e548e1a3b4dc0d912/623d3c9e548e1a4624c0d9e1_autonomy-network-logo-mark-white.svg\"\n            alt=\"\"\n          />\n          <h3 style={{ color: \"lightslategrey\" }}>{checkConnectedNetwork()}</h3>\n\n          <StyledRightSidePanel>\n            <StyledSelector> {balance} ETH</StyledSelector>\n            <StyledSelector> {chainIds[currentChain]}</StyledSelector>\n            <StyledSelector> {currentAccount}</StyledSelector>\n            <StyledSelector>{themeSwitcher}</StyledSelector>\n          </StyledRightSidePanel>\n        </StyledNav>\n\n        {Number(currentChain) === 3 ? (\n          <MyForm\n            web3={web3}\n            balance={balance}\n            selectedAccount={currentAccount}\n            registryContract={registryContract}\n            ethSenderContract={ethSenderContract}\n            isConnected={isConnected}\n            isConnecting={isConnecting}\n            message=\"Scheduled Transfer\"\n            onLoginHandler={onLoginHandler}\n          />\n        ) : (\n          <Card>\n            <div>Please use Ropsten Testnet</div>\n          </Card>\n        )}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}